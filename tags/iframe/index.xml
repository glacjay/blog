<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Iframe on Random Stuff from GlacJAY</title>
    <link>https://blog.glacjay.info/tags/iframe/</link>
    <description>Recent content in Iframe on Random Stuff from GlacJAY</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 07 Jan 2018 14:09:22 +0800</lastBuildDate>
    
	<atom:link href="https://blog.glacjay.info/tags/iframe/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>vue 集成 iframe</title>
      <link>https://blog.glacjay.info/post/2018-01-07/vue-%E9%9B%86%E6%88%90-iframe/</link>
      <pubDate>Sun, 07 Jan 2018 14:09:22 +0800</pubDate>
      
      <guid>https://blog.glacjay.info/post/2018-01-07/vue-%E9%9B%86%E6%88%90-iframe/</guid>
      <description>书接上回：最近不是在用 vue 开发 H5 App 嘛（再后来又加上了 react-native 😂，这个以后有机会说），我们有个接口返回的是 HTML 页面，在原来的原生 App 里面自然是用个 WebView 控件来展示啦，但我们现在整个应用都是 H5 了，HTML 里面嵌另一个 HTML，那第一反应自然就是 iframe 啰。
PS. H5 里面是嵌不了原生控件的对吧？react-native 是可以的，有时确实是要方便一些的……吧
PSS. 除了 iframe 之外呢，最近好像还有一个比较新的标准是 web components，也是用来做内嵌的吧，但对浏览器的版本要求应该比较高（虽然也是有 polyfill 的啦），记得我当时好像也是试了一下的，但是没成功 😂，也不记得是啥问题了，而且 iframe 也能满足要求啦，所以就没弄这个了。回头有机会再研究下吧。
如果只是简单的页面展示的话，直接通过 &amp;lt;iframe&amp;gt; 控件的 :src 属性绑定页面 URL 就完事啦。
但我们这是个 App 嘛，页面里面也是有一些可交互元素的，比如点击跳转到详情页之类的，这时就要绑定 &amp;lt;iframe&amp;gt; 的 @load 事件（vue 写法，对应于 JS 接口里面的 onload 事件），示例代码如下：
 要点：
 第 15 行：在 @load 事件回调方法 onIframeLoad 中，iframe 控件本身可以从 event.target 中得到，不需要用 vue 的 ref 之类的。 第 16 行：要从 iframe 页面中访问外部提供的接口，可以通过发送 message 事件来实现，那么在外部的 HTML 环境中就要通过 window.</description>
    </item>
    
  </channel>
</rss>